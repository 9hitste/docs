{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to 9Hits","text":"<p>V555</p> <p>9Hits is an automated traffic exchange system with a growing membership base, a lot of unique features. The 9Hits App also has extended features like a traffic bot or multi login and is free to use.</p> <p>The source of the document is in our git repo. PRs are welcome!</p> <p></p>"},{"location":"api/","title":"9Hits API","text":"<p>9Hits API allows you to access and manage some resources from the 9Hits Panel. You can get your API key from your profile page.</p>"},{"location":"api/#get-profile","title":"Get profile","text":"<p>Return your profile information. <pre><code>GET https://panel.9hits.com/api/profileGet?key=YOUR_API_KEY\n</code></pre></p> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": null,\n\"data\": {\n\"username\": \"daniel\",\n\"email\": \"daniel@9hits.com\",\n\"joined\": \"2015-02-21 15:32:44\",\n\"token\": \"1a8cb897ca8b97c897c98a7cbd880123\",\n\"funds\": 38.288,\n\"slots\": {\n\"used\": 5,\n\"available\": 78\n},\n\"points\": 803.57,\n\"membership\": \"VIP\",\n\"membershipEndDate\": \"2021-01-31 22:03:27\"\n}\n}\n</code></pre>"},{"location":"api/#get-custom-user-agents","title":"Get custom user-agents","text":"<p>Return all your custom user-agent group. <pre><code>GET https://panel.9hits.com/api/uaGet?key=YOUR_API_KEY\n</code></pre></p> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": [\n\"Fetched 2\"\n],\n\"data\": [\n{\n\"id\": 743,\n\"title\": \"My Customize Firefox\"\n},\n{\n\"id\": 2467,\n\"title\": \"iPhone6\"\n}\n]\n}\n</code></pre>"},{"location":"api/#get-campaigns","title":"Get campaigns","text":"<p>Return your campaigns. <pre><code>GET https://panel.9hits.com/api/siteGet?key=YOUR_API_KEY[&amp;page=1&amp;limit=100&amp;filter=condition]\n</code></pre></p> Sample Request <pre><code>Get your first 100 campaign:\nGET https://panel.9hits.com/api/siteGet?key=YOUR_API_KEY\n\nGet your first 500 campaign:\nGET https://panel.9hits.com/api/siteGet?key=YOUR_API_KEY&amp;limit=500&amp;page=1\n\nGet all your campaigns filtered by title or url:\nGET https://panel.9hits.com/api/siteGet?key=YOUR_API_KEY&amp;filter=my%20site\nGET https://panel.9hits.com/api/siteGet?key=YOUR_API_KEY&amp;filter=my-site.com\n\nGet a single campaign by id:\nGET https://panel.9hits.com/api/siteGet?key=YOUR_API_KEY&amp;filter=id:812031\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": [\n\"Fetched 1\"\n],\n\"data\": [\n{\n\"id\": 812031,\n\"title\": \"My Site\",\n\"isAdult\": false,\n\"hasCoinMining\": false,\n\"urls\": [\n\"https://my-site.com\"\n],\n\"referrers\": {\n\"mode\": \"basic\",\n\"urls\": [\n\"https://www.facebook.com\",\n\"https://www.google.com\",\n]\n},\n\"duration\": [\n59,\n70\n],\n\"platform\": {\n\"os\": {\n\"win\": 20,\n\"linux\": 5,\n\"mac\": 25,\n\"android\": 38,\n\"ios\": 12\n},\n\"browsers\": {\n\"chrome\": 60,\n\"edge\": 30,\n\"opera\": 4,\n\"safari\": 3,\n\"firefox\": 3\n},\n\"custom\": [\n{\n\"value\": 743,\n\"weight\":56\n},\n{\n\"value\": 8523,\n\"weight\": 44\n}\n],\n\"usage\": {\n\"system\": 10,\n\"fixed\": 30,\n\"custom\": 60\n}\n},\n\"macros\": \"await WaitForLoading();\\r\\nwhile(true)\\r\\n{\\r\\n    await Delay(Random(5000, 15000));\\r\\n    await ClickRandomLink();\\r\\n}\",\n\"popupMacros\": \"await WaitForLoading();\\r\\nwhile(true)\\r\\n{\\r\\n    await Delay(Random(5000, 15000));\\r\\n    await ClickRandomLink();\\r\\n}\",\n\"connectionTypes\": [\n\"system\",\n\"http\",\n\"socks4\",\n\"socks5\",\n\"ssh\"\n],\n\"connectionSpeed\": \"slow+\",\n\"performance\": \"slow+\",\n\"geo\": {\n\"rule\": \"all\",\n\"by\": \"country\",\n\"codes\": null\n},\n\"acceptLanguages\": null,\n\"capping\": {\n\"type\": \"own\",\n\"value\": 0,\n\"shared\": 0\n},\n\"maxHits\": 0,\n\"untilDate\": \"2021/10/13 06:08:04\",\n\"estimatedHits\": 123456,\n\"confirmedHits\": 123000,\n\"maxPopups\": 3,\n\"fingerprintSpoof\": true,\n\"allowProxy\": true,\n\"allowIPv6\": true,\n\"allowBlockedPopups\": true,\n'ipFilter': {\n'type': \"0\",\n'rules': \"1.55.*,223.54.1.*,2001:2f:*\"\n},\n\"hourlyLimit\": {\n\"speed\": \"fast\",\n\"hours\": [\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n}\n]\n},\n\"disJsRate\": 0,\n\"disImageRate\": 0,\n\"disCookieRate\": 100,\n\"cpuUsage\": 0.57,\n\"forceHide\": true,\n\"adSafe\": \"google-ads\",\n\"webSecurity\": false,\n\"similarWebEnabled\": true,\n\"viewerVersion\": \"all\",\n\"userState\": \"running\",\n\"systemState\": \"approved\"\n}\n]\n}\n</code></pre> <p>Warning</p> <p>The <code>limit</code> is 100 by default, maximum is 500, the <code>page</code> starts from 1. The returns are sorted by creation date.</p>"},{"location":"api/#add-new-campaign","title":"Add new campaign","text":"<p>The request body contains your campaign information in JSON format. <pre><code>POST https://panel.9hits.com/api/siteAdd?key=YOUR_API_KEY\n</code></pre></p> Sample Request (Simple) <pre><code>{\n\"title\": \"My Site\",\n\"isAdult\": false,\n\"hasCoinMining\": false,\n\"urls\": [\n\"http://my-site.com/about.html\"\n],\n\"duration\": [\n22,\n70\n]\n}\n</code></pre> Sample Request (Full) <pre><code>{\n\"title\": \"My Site\",\n\"isAdult\": false,\n\"hasCoinMining\": false,\n\"urls\": [\n\"http://my-site.com/about.html\",\n\"http://my-site.com/pricing.html\"\n],\n\"referrers\": {\n\"mode\": \"advanced\", //basic\n\"urls\": [           //if mode is basic, urls should be array [\"http://url1\", \"http://url2\"]\n{\n\"url\": \"https://www.fb.com\",\n\"rate\": 70\n},\n{\n\"url\": \"https://www.twitter.com\",\n\"rate\": 30\n}\n]\n},\n\"duration\": [\n22, //from\n70  //to\n],\n\"platform\": {\n\"os\": {  //OS usage rate\n\"win\": 20,\n\"linux\": 5,\n\"mac\": 25,\n\"android\": 38,\n\"ios\": 12\n},\n\"browsers\": { //Browser usage rate\n\"chrome\": 60,\n\"edge\": 30,\n\"opera\": 4,\n\"safari\": 3,\n\"firefox\": 3\n},\n\"custom\": [ //Custom user agent usage rate\n{\n\"value\": 743,\n\"weight\":56\n},\n{\n\"value\": 8523,\n\"weight\": 44\n}\n],\n\"usage\": { //User agent source usage rate\n\"system\": 10,\n\"fixed\": 30,\n\"custom\": 60\n}\n},\n\"macros\": \"await WaitForLoading();\\r\\nwhile(true)\\r\\n{\\r\\n    await Delay(Random(5000, 15000));\\r\\n    await ClickRandomLink();\\r\\n}\",\n\"popupMacros\": \"await WaitForLoading();\\r\\nwhile(true)\\r\\n{\\r\\n    await Delay(Random(5000, 15000));\\r\\n    await ClickRandomLink();\\r\\n}\",\n\"connectionTypes\": [\n\"system\",\n\"http\",\n\"socks4\",\n\"socks5\",\n\"ssh\"\n],\n\"connectionSpeed\": \"medium+\", //slow+, good+\n\"performance\": \"medium+\", //slow+, good+\n\"geo\": {\n\"rule\": \"all\", //any, except\n\"by\": \"country\", //continent\n\"codes\": [\"US\", \"VN\"]\n},\n\"acceptLanguages\": null, //[\"VN\", \"US\"]\n\"capping\": {\n\"type\": \"shared\",   //own\n\"value\": 86400,     //in seconds\n\"shared\": 324153    //if type is shared, here is the master campaign id\n},\n\"maxHits\": 110,\n\"untilDate\": \"2021/10/13 06:08:04\",\n\"maxPopups\": 3,\n\"fingerprintSpoof\": true,\n\"allowProxy\": false,\n\"allowIPv6\": false,\n\"allowBlockedPopups\": false,\n'ipFilter': {\n'type': \"0\", //0: by session ip, 1: by machine ip, 2: by all\n'rules': \"1.55.*,223.54.1.*,2001:2f:*\"\n},\n\"hourlyLimit\": {\n\"speed\": \"fast\", //slow\n\"hours\": [ //Array with 24 elements corresponds to 24 hours from 00 to 23\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 10,\n\"max\": 10\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n},\n{\n\"min\": 0,\n\"max\": 0\n}\n]\n},\n\"disJsRate\": 0,\n\"disImageRate\": 0,\n\"disCookieRate\": 100,\n\"forceHide\": true,\n\"adSafe\": \"google-ads\", //can be empty\n\"webSecurity\": false,\n\"similarWebEnabled\": true,\n\"viewerVersion\": \"all\",\n\"userState\": \"running\" //paused\n}\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": [\n\"Created #400466\"\n],\n\"data\": null\n}\n</code></pre>"},{"location":"api/#update-a-campaign","title":"Update a campaign","text":"<p>The request body contains your campaign information in JSON format, just similar to the request body of the <code>Add Campaign API</code>, but you need to add the <code>campaign id</code>, you don't need to submit all campaign information, just specify the information you need to update. You can also submit resetHitCounter (optional) as true to reset hit counter.</p> <pre><code>POST https://panel.9hits.com/api/siteUpdate?key=YOUR_API_KEY\n</code></pre> Sample Request <pre><code>{\n\"id\": 400466,\n\"title\": \"My New Site\",\n\"resetHitCounter\": true,\n\"urls\": [\n\"http://my-site.com/new-post1.html\",\n\"http://my-site.com/new-post2.html\"\n],\n...\n}\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": [\n\"Updated #400466\"\n],\n\"data\": null\n}\n</code></pre>"},{"location":"api/#delete-campaigns","title":"Delete campaigns","text":"<p>Delete your campaigns by id <pre><code>POST https://panel.9hits.com/api/siteDel?key=YOUR_API_KEY\n</code></pre></p> Sample Request <pre><code>[400466, 400467, 400468]\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": null,\n\"data\": null\n}\n</code></pre>"},{"location":"api/#session-stats","title":"Session stats","text":"<p>Get your session stats</p> <pre><code>GET https://panel.9hits.com/api/sessionStats?key=YOUR_API_KEY\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": null,\n\"data\": {\n\"total\": 1,\n\"online\": 1,\n\"system\": 1,\n\"http\": 0,\n\"socks4\": 0,\n\"socks5\": 0,\n\"ssh\": 0,\n\"isProxy\": 0\n}\n}\n</code></pre>"},{"location":"api/#transfer-points","title":"Transfer points","text":"<p>Transfer points from your account to an other member <pre><code>POST https://panel.9hits.com/api/transfer?key=YOUR_API_KEY\n</code></pre></p> Sample Request <pre><code>{\n\"receiver\" : \"daniel\",\n\"message\" : \"Hi, a small gift for you ;)\",\n\"amount\" : 100\n}\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": [\n\"You have sent 90 points to daniel\"\n],\n\"data\": {\n\"sender\": \"john\",\n\"receiver\": \"daniel\",\n\"amount\": 100,\n\"net\": 90,\n\"fee\": 10\n}\n}\n</code></pre>"},{"location":"api/#transfer-funds","title":"Transfer funds","text":"<p>Transfer funds from your account to an other member. This function is for reseller only. <pre><code>POST https://panel.9hits.com/api/fund?key=YOUR_API_KEY\n</code></pre></p> Sample Request <pre><code>{\n\"receiver\" : \"daniel\",\n\"message\" : \"Thank you\",\n\"amount\" : 100\n}\n</code></pre> Sample Response <pre><code>{\n\"status\": \"ok\",\n\"messages\": [\n\"You have sent $100 to daniel\"\n],\n\"data\": {\n\"sender\": \"john\",\n\"receiver\": \"daniel\",\n\"amount\": 100,\n\"commission\": 15\n}\n}\n</code></pre> <p>Tip</p> <p>Want more functions? Feel free to make a request!</p>"},{"location":"getting-started/","title":"Getting Started with 9Hits","text":""},{"location":"getting-started/#opening-a-free-account","title":"Opening a free account","text":"<p>It is free to register an account at 9Hits, click here to create one.</p>"},{"location":"getting-started/#running-the-9hits-application","title":"Running the 9Hits Application","text":"<p>Install and run the 9Hits App, get your token key at the profile page. You may wanna read more about the app configuration.</p> <p></p> <p>Active the <code>Exchange Mode</code> tab, press the  button to add a new session, then press the  button to start exchanging traffic with the other members.</p> <p></p> <p>Info</p> <p>By running the application, you will start viewing other members' websites in the system and earn  POINTS to your account.</p> <p></p>"},{"location":"getting-started/#creating-a-new-campaign","title":"Creating a new campaign","text":"<p>To start getting traffic, create your first campaign here. For more details, see the Campaign Manage. Once your campaign is ready, you will start getting views from other members in the same way you view them with the 9Hits App. You will pay 1 POINTS for every 1 second your website is viewed. You can earn free POINTS by running the app as instructed, or just buy it here.</p> <p></p>"},{"location":"getting-started/#getting-help","title":"Getting help","text":"<p>Feel free to create ticket, join our discord or forum.</p>"},{"location":"9hits-app/installation/","title":"9Hits Installation","text":"<p>Install the 9Hits application</p>"},{"location":"9hits-app/installation/#requirements","title":"Requirements","text":""},{"location":"9hits-app/installation/#hardware-requirements","title":"Hardware requirements:","text":"<ul> <li>CPU with one or more cores, 2GHz</li> <li>At least 2G of RAM</li> </ul>"},{"location":"9hits-app/installation/#software-requirements","title":"Software requirements:","text":"<ul> <li>Windows 7, Windows Server 2008 R2 or later</li> <li>Ubuntu Desktop 14.04, Debian 8.9, Centos 7.4 or later</li> </ul>"},{"location":"9hits-app/installation/#installation","title":"Installation","text":"<p>Please login to the panel and get the download links, the 9Hits App is available on Windows and Linux. You may have no problem on Windows, but on Linux you may need to install some required libraries and set permissions as follows:</p>"},{"location":"9hits-app/installation/#rhelcentos","title":"RHEL/Centos","text":"<pre><code>yum update -y\nyum install -y libatomic alsa-lib-devel gtk3-devel libgbm libxkbcommon-x11 cups-libs.i686 cups-libs.x86_64 atk.x86_64 libnss3.so xorg-x11-server-Xvfb sed tar wget bzip2 libXScrnSaver psmisc\n</code></pre>"},{"location":"9hits-app/installation/#ubuntudebian","title":"Ubuntu/Debian","text":"<pre><code>apt-get update\napt-get upgrade -y\napt-get install -y bzip2 libcanberra-gtk-module libxss1 sed tar libxtst6 libnss3 wget psmisc bc libgtk-3-0 libgbm-dev libatspi2.0-0 libatomic1\n</code></pre>"},{"location":"9hits-app/installation/#set-permissions","title":"Set permissions","text":"<pre><code>cd THE_APP_FOLDER\nchmod -R 777 .\nchmod +x ./9HitsApp ; chmod +x ./9hits ; chmod +x ./browser/9hbrowser ; chmod +x ./3rd/9htl\n</code></pre>"},{"location":"9hits-app/installation/#use-docker","title":"Use Docker","text":"<p>Click here for more details.</p> <pre><code>docker pull 9hitste/app\n</code></pre> <p>Tip</p> <p>You may want to install the app without GUI</p>"},{"location":"9hits-app/installation/#configuration","title":"Configuration","text":"<p>Once the application is ready, run it and press the  button to open the Global Setting window, enter your key in the Access Key field, then press the <code>Save</code> button.</p> <p>Details of other options:</p> <ul> <li>Note: Note for the machine, usefull on the remote page</li> <li>Cache Dir: Override browser data default path</li> <li>SSH Connector: Library for connecting SSH proxy, Putty is recommended</li> <li>Low End Mode: Enable this option to optimize resources on weak machines</li> <li>Top Most: Keep the 9Hits App window on top</li> </ul> <p></p>"},{"location":"9hits-app/overview/","title":"The 9Hits Application","text":"<p>The 9Hits App is an application built on top of chromium browser, customized by 9Hits and mainly used for traffic exchange between members. You can also use it as a traffic bot or for multi login/account purposes.</p> <p></p>"},{"location":"9hits-app/profile-mode/","title":"Profile Mode","text":""},{"location":"9hits-app/profile-mode/#overview","title":"Overview","text":"<p>Unlike the Bot Mode, Profile Mode allows you to create and manage separate profiles, for registering/logging multiple accounts on the same website or any similar purposes.</p> <p>From the 9Hits App windows, active the Profile Mode tab</p> <p></p>"},{"location":"9hits-app/profile-mode/#profile-properties","title":"Profile properties","text":"GeneralBrowserHTTP HeadersGEOScreenOthers <ul> <li>Title: Naming your profile</li> <li>User Agent: User Agent string, default is chrome</li> <li>Urls: Links to receive traffic, one link per line, the bot will use randomly.</li> <li>Referrers: Link to fake sources, one link per line, the bot will use randomly.</li> <li>Main Macro: Macros to execute while the profile is running.</li> <li>Popups Macros: Macros to execute on every opened popups.</li> <li>Duration: How long should the website is open (in seconds), 0 mean unlimited.</li> <li>Browser Width/Height: Browser size.</li> <li>Proxy: Proxy information: Type, server, user/pass</li> </ul> <ul> <li>Visiblity: Show/Hide the browser</li> <li>Timezone: Timezone to spoof</li> <li>Block Request: Block urls on the browser by patterns or regular expression.</li> <li>Languages: The browser language</li> <li>Max Popups: Maximum number of popups that can be opened.</li> <li>JS/IMG/CSS/Websicurity: Enable/Disable the browser features</li> <li>Plugin and mime types: Spoof browser plugins</li> <li>WebGL: Spoof webgl fingerprint</li> <li>Inject Script: Inject javascript code to run on your webpage.</li> </ul> <ul> <li>Reorder headers</li> <li>Remove headers</li> <li>Override headers</li> </ul> <p>Spoof GEO location</p> <p>Spoof Screen information</p> <ul> <li>Canvas fingerprint</li> <li>Audio fingerprint</li> <li>Rect fingerprint</li> <li>Font fingerprint</li> <li>WebRTC spoof</li> <li>CPUs spoof</li> <li>Memory spoof</li> </ul>"},{"location":"9hits-app/proxy-pool/","title":"Manage your proxy pools","text":""},{"location":"9hits-app/proxy-pool/#what-is-a-proxy-pool","title":"What is a proxy pool?","text":"<p>In the <code>bot</code> or <code>exchange</code> mode, the app can use proxies from an external source (by passing a source URL), you can build a proxy server yourself for the <code>exchange</code> mode, or use the built-in proxy server hosted at 9Hits, managing the pools is quite simple, just follow the instructions in the manage page.</p>"},{"location":"9hits-app/proxy-pool/#how-to-use","title":"How to use?","text":"<p>Once you have created the pool and imported your proxies, you can either get the URL or just the pool key and set it to a session or the <code>Proxy Source</code> option in the <code>bot</code> mode settings. You can use your pools privately or share it with any other member. </p> <p></p>"},{"location":"9hits-app/bot/configuration/","title":"Bot Configuration","text":"<p>Info</p> <p>If you want to generate traffic to your website using proxies, you can use bot mode. From the 9Hits App windows, active the Bot Mode tab, press the  button to open the bot setting window.</p> <p></p>"},{"location":"9hits-app/bot/configuration/#general-setting","title":"General Setting","text":"<ul> <li>Proxy Type: Specify the type of proxy you intend for the bot to use, supported types include: HTTP, Socks4/5, SSH and Custom.</li> <li>Proxy Source: The source to your proxy list, can be a path to a file on your computer, or a url. If left blank, the app will read the default file <code>config/bot/proxies.txt</code>. The proxy in your list needs to be in the correct format <code>ip:port;user;password;country;timezone_id;longitude;latitude</code> where <code>ip</code> is required, remaining fields are optional. If the proxy has full information about the country, timezone, geo. The app will use them to spoof on the browser, you can use the GEO tool to achieve this. Here is an example of a proxy list: <pre><code>184.82.229.132;root;admin;TH;Asia/Bangkok;100.4536;13.7653\n180.183.129.38;admin;admin;TH;Asia/Bangkok;100.5003;13.6855\n36.226.43.79;user;user;TW;Asia/Taipei;121.5422;24.9389\n61.64.85.228;user;user;TW;Asia/Taipei;121;24\n89.96.103.170;test;test;IT;Europe/Rome;9.1922;45.4722\n190.46.181.66;admin;0l0ctyQh243O63uD;CL;America/Santiago;-70.6653;-33.4513\n91.79.251.202;support;support;RU;Europe/Moscow;37.6068;55.7386\n111.248.209.84;user;user;TW;Asia/Taipei;121.5324;25.0504\n169.239.236.80;system;OkwKcECs8qJP2Z;NG;Africa/Lagos;8;10\n85.163.104.74;admin;123456;CZ;Europe/Prague;15.9509;49.3364\n36.225.189.155;user;user;TW;Asia/Taipei;120.4859;23.1355\n114.44.169.241;support;support;TW;Asia/Taipei;121.5422;24.9389\n62.11.226.25;user;admin;IT;Europe/Rome;9.2545;39.2279\n125.236.200.166;system;OkwKcECs8qJP2Z;NZ;Pacific/Auckland;174.7679;-36.8506\n180.183.97.6;admin;admin;TH;Asia/Bangkok;100.5172;13.7512\n36.237.75.103;user;user;TW;Asia/Taipei;120.3139;22.6148\n170.79.88.66;system;OkwKcECs8qJP2Z;CO;America/Bogota;-75.2374;4.4337\n190.90.193.96;admin;0l0ctyQh243O63uD;CO;America/Bogota;-74.0943;4.6089\n105.255.209.181;system;OkwKcECs8qJP2Z;ZA;Africa/Johannesburg;18.4811;-34.0486\n114.38.183.191;user;user;TW;Asia/Taipei;120.5408;24.0662\n</code></pre></li> <li>Update URL / Frequency Check: Please read the cusom update document.</li> <li>Browser Data: Tell the bot how to handle website data, the options are: <code>Clear All</code>, <code>Clear Cache Only</code>, <code>Clear Cookie Only</code>, <code>Keep All</code></li> <li>Download Mode: Options for downloading files</li> <li> <p>Browser Counter: When should the countdown start (browser close when the countdown ends).</p> </li> <li> <p>Auto Start: Auto start the bot once the app is open.</p> </li> <li>Loop Forever: Loop your proxy list forever. If you disable this option, the bot will stop when all your proxies has been used</li> <li>Random Proxies: Use the proxies list randomly</li> <li>Random Campaigns: Use the campaigns randomly</li> <li>Disable JS/IMG/CSS: Disable the respective content</li> <li>Hide Browser: Hide the browser while the bot is running</li> <li>Web Security: Toggle web security policy</li> </ul>"},{"location":"9hits-app/bot/configuration/#hourly-thread","title":"Hourly Thread","text":"<p>You can set the number of threads (number of browsers running at the same time) by hours. It may be the same or different</p> <p></p>"},{"location":"9hits-app/bot/configuration/#custom-proxy-parser","title":"Custom Proxy Parser","text":"<p>If you set the Proxy Type option to Custom in the General Setting, you need to write your custom proxy parser script. Please read the instructions below carefully! </p> <p>Your script needs to be written in javascript syntax. You can also test your code by press Run Test button. Here are some available functions and constants, details are as follows:</p>"},{"location":"9hits-app/bot/configuration/#setproxy","title":"SetProxy","text":"<p>This is the most important function, once you have obtained the proxy from your script, call the SetProxy function and pass it a required proxy object. Other information if provided such as CountryCode, Latitude, Longitude, TimezoneId. The bot will use to spoof the corresponding browser language, GEO, timezone.</p> Example <pre><code>SetProxy ({\nProxyType: \"http\",              //required\nProxyAddress: \"12.34.56.99\",    //required\nProxyUser: \"\",                  //optional\nProxyPassword: \"\",              //optional\nCountryCode: \"SG\",              //optional\nLatitude: \"1.3078\",             //optional\nLongitude: \"103.6818\",          //optional\nTimeZoneId: \"Asia/Singapore\"    //optional\n})\n</code></pre>"},{"location":"9hits-app/bot/configuration/#seterror","title":"SetError","text":"<p>Show an error message to the Status column, the bot will retry your script then.</p> Example <pre><code>(async ()=&gt;{\nconst result = await HttpRequest(\"http://my-proxy-server.com\", {from: \"9hits-bot\"});\nif(result) {\nSetProxy ({\nProxyType: \"http\",\nProxyAddress: result\n});\n}\nelse SetError(\"My server return empty\");\n})()\n</code></pre>"},{"location":"9hits-app/bot/configuration/#setstatus","title":"SetStatus","text":"<p>Show a status text to the thread that calling your parser script.</p> Syntax <pre><code>SetStatus (text);\n</code></pre> Parameters Name Description <code>text</code> a text content. Example <pre><code>(async ()=&gt;{\nSetStatus(\"Connecting to my-proxy-server...\");\nconst result = await HttpRequest(\"http://my-proxy-server.com\");\nSetProxy ({\nProxyType: \"http\",\nProxyAddress: result\n});\n})()\n</code></pre>"},{"location":"9hits-app/bot/configuration/#httprequest","title":"HttpRequest","text":"<p>Make a HTTP request</p> Syntax <pre><code>HttpRequest (url, postData);\n</code></pre> Parameters Name Description <code>url</code> URL to send request. <code>postData</code> Post Parameters (optional). Example <pre><code>//promise\nHttpRequest(\"http://my-proxy-server.com\").then(result =&gt; {\nSetProxy ({\nProxyType: \"http\",\nProxyAddress: result\n});\n});\n//async\n(async ()=&gt;{\nconst result = await HttpRequest(\"http://my-proxy-server.com\", {from: \"9hits-bot\"});\nSetProxy ({\nProxyType: \"http\",\nProxyAddress: result\n});\n})()\n</code></pre>"},{"location":"9hits-app/bot/configuration/#readfile","title":"ReadFile","text":"<p>Read a file and return as text.</p> Syntax <pre><code>ReadFile (path);\n</code></pre> Parameters Name Description <code>path</code> path to the file. Example <pre><code>const myRotating = ReadFile(\"/home/daniel/myRotating.text\");\nSetProxy ({\nProxyType: \"http\",\nProxyAddress: myRotating\n});\n</code></pre>"},{"location":"9hits-app/bot/configuration/#constants-and-variables","title":"Constants and Variables","text":"You can use these constants and variables in your script <pre><code>ThreadId        //Id of the thread that calling your parser script\nThreadIndex     //Index of the thread that calling your parser script (zero base)\nWorkingDir      //The current working dir of the bot\nGlobal          //A global object exists between the threads and your script executions, useful for storing global data.\n</code></pre>"},{"location":"9hits-app/bot/configuration/#monitor-sessions","title":"Monitor Sessions","text":"<p>Once your bot is started, you can monitor the status of your running bots here.</p>"},{"location":"9hits-app/bot/custom-update/","title":"Custom update","text":""},{"location":"9hits-app/bot/custom-update/#overview","title":"Overview","text":"<p>In case you have a lot of computers which running the bot, and you need to change the settings for these computers in bulk, such as proxy list, campaigns, user-agents, or anything else.</p> <p>If you just want update your proxy list only, it is recommended to set the Proxy Source option to an URL link to your proxy text file. Eg: <code>http://my-site.com/proxies.txt</code>. So every time you need to update your proxy list, just update the file <code>proxies.txt</code> on your host.</p>"},{"location":"9hits-app/bot/custom-update/#how-does-it-works","title":"How does it works?","text":"<p>In the setting, we have two options:</p> <ul> <li>Update Url: URL to check your update version. It should be a simple text file, containing the content in the following format: <code>version_number|download_update_url</code></li> <li>Frequency Check: Time to periodically check your update version from the <code>Update URL</code> in minutes.</li> </ul> <p>The bot will periodically check for the information from your Update URL. Your latest version number will be saved at the <code>config/bot/custom-version.txt</code> file.</p> <p>If the saved version number is differs from your version number on the <code>Update URL</code>, the bot will download the zip file from the <code>download_update_url</code>, unzip the update file and restart itself.</p> <p>For example we have an <code>Update Url</code> is <code>http://my-site.com/check.txt</code> with the content <pre><code>9999|http://my-site.com/update.zip\n</code></pre></p> <p>In the <code>Update Url</code>, the current version number is <code>9999</code>, to do the update, we just need to prepare a new update file and upload to <code>my-site.com/update.zip</code>, in this example it is <code>update.zip</code>, then change the version number in the file <code>my-site.com/check.txt</code> to let the bot know that it needs to download the new update file. For example: <pre><code>10000|http://my-site.com/update.zip\n</code></pre></p> <p>You can see the current custom version of your update from the 9Hits Panel, it is the <code>CustomVersion</code> column.</p> <p>Warning</p> <p>The update file will be extracted from the root directory of the app, so please note the directory structure and files in your update file.</p>"},{"location":"9hits-app/bot/geo-proxy/","title":"GEO proxy list","text":""},{"location":"9hits-app/bot/geo-proxy/#what-for","title":"What for?","text":"<p>If there is more information about your proxy, the bot will spoof the browser more deeply. Details are as follows:</p> <ul> <li>Country: Ability to spoof browser language (default is en-US), this is required if you want the Languages option of your campaign works.</li> <li>TimezoneID: Spoof timezone</li> <li>Longitude and Latitude: Spoof GEO location</li> </ul>"},{"location":"9hits-app/bot/geo-proxy/#how-to","title":"How to?","text":"<p>From the Bot Mode tab, click the  button to open the GEO tool</p> <p></p> <p>You can paste your proxy list here or click the <code>Load</code> button to automatically get the proxy list from the setting. Click the <code>Start</code> button to start the GEO, once done, you can save the results with the <code>Save</code> button or just copy it.</p>"},{"location":"9hits-app/bot/manage-campaign/","title":"Manage your campaigns","text":""},{"location":"9hits-app/bot/manage-campaign/#open-campaign-manager","title":"Open campaign manager","text":"<p>From the Bot Mode tab, press the  button to open the campaign manager</p> <p></p>"},{"location":"9hits-app/bot/manage-campaign/#campaign-properties","title":"Campaign properties","text":"<ul> <li>Title: Naming your campaign</li> <li>Urls: Links to receive traffic, one link per line, the bot will use randomly.</li> <li>Referrers: Link to fake sources, one link per line, the bot will use randomly.</li> <li>Duration: Range of duration to view your website, the bot will view at a random duration between the range that you set</li> <li>Enabled: Enable/Disable the campaign.</li> <li>Main Macro: Macros to execute while the browser is viewing your site.</li> <li>Popups Macros: Macros to execute on every opened popups.</li> <li>Max Popups: The number of popups allowed to open.</li> <li>Block Request: Block urls on the browser by patterns or regular expression.</li> <li>Languages: Set the browser language by country of the current IP viewing your website. By default it will be en-US, to make this feature work, you need to GEO your proxy list.</li> <li>Inject Script: Inject javascript code to run on your webpage.</li> </ul>"},{"location":"9hits-app/bot/user-agent/","title":"Manage your user-agent","text":""},{"location":"9hits-app/bot/user-agent/#open-user-agent-manager","title":"Open user-agent manager","text":"<p>From the Bot Mode tab, press the  button to open the user-agent manager</p> <p></p>"},{"location":"9hits-app/bot/user-agent/#user-agent-group-properties","title":"User-agent group properties","text":"<ul> <li>Title: Naming your user-agent group</li> <li>Settings:<ul> <li>ScreenSize: Size of the screen to spoof</li> <li>Color/Pixel Depth: Color/pixel depth of the screen to spoof</li> <li>Touch: Enable touch events on the browser</li> <li>DPR:  Spoof device pixel ratio. Normally use on the mobile user agent. Example value: 1, 1.5, 2, 2.5. set to zero to use the default.</li> </ul> </li> <li>User-Agent List: List of user agent string, one per line.</li> </ul> <p>Tip</p> <p>You can go to developers.whatismybrowser.com or any other sources to get more user agents. For the screen sizes, you may visit screensiz.es</p>"},{"location":"9hits-app/bot/user-agent/#how-does-the-bot-use-your-user-agents","title":"How does the bot use your user agents","text":"<p>The bot will randomly select an user-agent group based on the USAGE RATE you set, then continue to randomly select a setting and an user-agent string to use.</p>"},{"location":"9hits-app/exchange/app-config/","title":"Exchange Configuration","text":"<p>From the 9Hits App windows, active the Exchange Mode tab</p> <p></p>"},{"location":"9hits-app/exchange/app-config/#manage-sessions","title":"Manage sessions","text":"<p>A session is like a browser profile in which web pages are viewed by the browser. 9Hits allows you to run multiple sessions on the same machine to optimize point earning, as long as each session has a unique IP address.</p> <ul> <li> Run selected sessions</li> <li> Stop selected sessions</li> <li> Open exchange settings</li> <li> Add a new session</li> <li> Mass add sessions from a proxy list</li> <li> Delete selected sessions</li> <li> Export proxy from sessions to clipboard</li> </ul> <p>Attention!</p> <p>You should not abuse running too many sessions beyond the capacity of the machine. This can make your sessions less efficient, even rejected by the system.</p>"},{"location":"9hits-app/exchange/app-config/#session-properties","title":"Session properties","text":"<ul> <li>ID: A unique id of a session</li> <li>Note: Note for the session</li> <li>Proxy: <ul> <li>System: Use the real IP</li> <li>HTTP: HTTP proxy</li> <li>Socks4: Socks4 proxy</li> <li>Socks5: Socks5 proxy</li> <li>SSH: SSH proxy</li> <li>ExProxy: External proxy pool, you can just import proxy to your pool on the panel or create your own proxy pool</li> </ul> </li> <li>Client: The client information when the session is running</li> <li>Points: Earned points from the session</li> <li>Hits: Sent hits from the session</li> <li>Status: Status of the session</li> </ul>"},{"location":"9hits-app/exchange/app-config/#exchange-setting","title":"Exchange setting","text":"<p>Press the  button to open the exchange setting window</p> <p></p> <ul> <li>Browser Show/Hide the browser</li> <li>Popups Allow/Deny sites that have popups</li> <li>Adult Allow/Deny sites that have adult contents</li> <li>CoinMining Allow/Deny crypto mining sites</li> <li>Caching The longer the cache is kept, the more bandwidth you will save, but it will consume disk space.</li> </ul>"},{"location":"9hits-app/exchange/app-config/#monitor-sessions","title":"Monitor sessions","text":"<p>Once you have run the application, you can now monitor your sessions, there is also a lot of useful information here.</p> <p></p> <p>Tip</p> <p>Pay attention to the Quality column, the higher the quality, the higher your point earning rate and vice versa (the Rate column). The three faces respectively: Proxy, connection speed, website loading performance.</p>"},{"location":"9hits-app/exchange/app-config/#remote-control","title":"Remote Control","text":"<p>You can monitor the status as well as remotely control the 9Hits App that is running on your computer from the panel.</p> <p></p>"},{"location":"9hits-app/exchange/app-config/#achievements","title":"Achievements","text":"<p>By running the exchange mode, you can reach achievements based on the number of websites you have viewed in the system. At each level you will receive the corresponding rewards.</p> <p></p> <ul> <li>Visit 5,000 Websites: +1 Website Slot, 50,000 Points</li> <li>Visit 10,000 Websites: +1 Website Slot, 100,000 Points</li> <li>Visit 30,000 Websites: +1 Website Slot, 300,000 Points</li> <li>Visit 120,000 Websites: +1 Website Slot, 500,000 Points</li> <li>Visit 250,000 Websites: +1 Website Slot, 1,000,000 Points</li> <li>Visit 1,000,000 Websites: +1 Website Slot, 2,000,000 Points</li> <li>Visit 5,000,000 Websites: +1 Website Slot, 4,000,000 Points</li> <li>Visit 20,000,000 Websites: +1 Website Slot, 5,000,000 Points</li> <li>Visit: 99,999,999 Websites: +1 Website Slot, 50,000,000 Points</li> <li>Visit: 999,999,999 Websites: +2 Website Slots, +1 Year of VIP</li> <li>Visit: 9,999,999,999 Websites: +3 Website Slots, +5 Years of VIP</li> </ul> <p>When you reach any level, you need to press the <code>Claim</code> button to claim it</p> <p>Tip</p> <p>In addition, if you reach the top 3 position in the weekly leader-board, you will receive the corresponding reward. You can see the rankings at the 9Hits Panel.</p>"},{"location":"9hits-app/exchange/manage-campaign/","title":"Manage your campaigns","text":"<p>After creating a free account at 9Hits, the first step is to create and manage your campaigns here. Below are the details of your campaign options</p> <p></p>"},{"location":"9hits-app/exchange/manage-campaign/#campaign-properties","title":"Campaign properties","text":""},{"location":"9hits-app/exchange/manage-campaign/#title","title":"Title","text":"<p>Give your campaign any name, as long as it makes it easy for you to remember and manage.</p>"},{"location":"9hits-app/exchange/manage-campaign/#is-adult","title":"Is Adult","text":"<p>Specify whether your site has adult content or not. Note that if you intentionally choose the wrong answer, your account may be banned.</p>"},{"location":"9hits-app/exchange/manage-campaign/#has-coin-mining","title":"Has Coin Mining","text":"<p>Specify whether your site has coin mining script or not. Note that if you intentionally choose the wrong answer, your account may be banned. In case you set this option to No, the system will still automatically scan your campaign and warning you if it finds any coin mining activities.</p>"},{"location":"9hits-app/exchange/manage-campaign/#url","title":"URL","text":"<p>Your website URL, you can place one or more links (one per line). The system will randomly select the links you have set. Traffic will be shared equally for the links.</p>"},{"location":"9hits-app/exchange/manage-campaign/#referrers","title":"Referrers","text":"<p>This option allows you to spoof traffic sources.</p> <ul> <li>Basic mode: You can set one or more source URLs, one per line. The system will select the link to simulate the traffic source at an equal rate.</li> <li>Advanced mode: Similar to the basic mode, but you can set the rate for each individual link. For example, we set 60% of the source from facebook, 25% from twitter and 15 is direct. </li> </ul>"},{"location":"9hits-app/exchange/manage-campaign/#duration","title":"Duration","text":"<p>Time to view your website, up to 600 seconds</p>"},{"location":"9hits-app/exchange/manage-campaign/#platforms","title":"Platforms","text":"<p>By default, the system will spoof the User-Agent of mobile and desktops devices with a set of User-Agents managed by 9Hits. You can also manage to use your custom User-Agent as well as set the rate of using them. </p>"},{"location":"9hits-app/exchange/manage-campaign/#macros","title":"Macros","text":"<p>This is one of the unique features of 9Hits. It allows you to create interactions on your website without the need for real user interaction. A simple example, you want after your website is loaded, there will be a click on any link. You can set macros to run on main browser window or popup windows, the main script will only run on the main (first) browser window, the popup script will run on any opened popup. Learn more about Macros</p>"},{"location":"9hits-app/exchange/manage-campaign/#connection-types","title":"Connection Types","text":"<p>The 9Hits App supports most types of proxies. This option allows you to filter visitors according to the type of proxy it is using, where the System is the real IP of the computer. It is recommended that you select them all.</p>"},{"location":"9hits-app/exchange/manage-campaign/#connection-speed","title":"Connection Speed","text":"<p>Allows you to filter visitors according to their network connection speed</p>"},{"location":"9hits-app/exchange/manage-campaign/#performance","title":"Performance","text":"<p>Allows you to filter visitors according to their computer performance, for example, a computer with a CPU that is always 90 to 100% will be treated as slow performance</p>"},{"location":"9hits-app/exchange/manage-campaign/#geo-targeting","title":"GEO Targeting","text":"<p>Filter visitors by geographic location, you can filter by country or continent. There are two filtering rules: Only Selected or Except Selected items</p>"},{"location":"9hits-app/exchange/manage-campaign/#frequency-capping","title":"Frequency Capping","text":"<p>Using this option allows you to limit the frequency of viewing your website by the same visitor (IP address). For example, the same visitor is only allowed to view your website once every hour, every 8 hours, or every 24 hours, and so on.</p> <p>This option is normally applied to only one single campaign (This Site Only). But you can also set up a group of campaigns (Share with ...). For example, you have campaign Website 1 with a frequency of 24 hours, campaign Website 2, Website 3, with the frequency shared with campaign Website 1. So within 24 hours, the same visitor can view only one of the three campaigns, if viewed 1 will not view 2 and 3, viewed 2 will not view 1 and 3, viewed 3 will not view 1 and 2. Please note that in this frequency group, Website 1 is the master, so the frequency type must be This Site Only.</p> <p></p>"},{"location":"9hits-app/exchange/manage-campaign/#accept-languages","title":"Accept Languages","text":"<p>This is a browser header, the default is en-US, if you select countries, then Accept Languages will be set according to that countries. For example, a visitor from Spain will have Accept Languages as es-es instead of the default en-US</p>"},{"location":"9hits-app/exchange/manage-campaign/#force-hide","title":"Force Hide","text":"<p>Force the viewer to hide the browser when viewing your site (in case you want to keep your site private).</p>"},{"location":"9hits-app/exchange/manage-campaign/#fingerprint-spoof","title":"Fingerprint Spoof","text":"<p>Every web browser can be calculated to identify its fingerprint based on a variety of information. By spoofing this information, the traffic sent to your site will look more real. You can check for browser's fingerprint here or any similar tools.</p>"},{"location":"9hits-app/exchange/manage-campaign/#max-hits","title":"Max Hits","text":"<p>imit the number of views for your campaign. Be careful when using this option because your campaign will stop receiving visits when it reaches the number of views you have set. You may want to use the Hourly Limit option instead!</p>"},{"location":"9hits-app/exchange/manage-campaign/#until-date","title":"Until Date","text":"<p>Only receive traffic until a specified date (based on server time)</p>"},{"location":"9hits-app/exchange/manage-campaign/#max-popups","title":"Max Popups","text":"<p>The number of popups allowed to open when a visitor is viewing your site. Popup can be opened automatically by ads on your website or by an interaction like clicks. Note that the more popup you open, the more POINTS you pay.</p>"},{"location":"9hits-app/exchange/manage-campaign/#allow-proxy","title":"Allow Proxy","text":"<p>Allow visitors to use proxies to view your website. Note that the system will check the visitor's IP based on many factors. Therefore, a real IP of a visitor may be considered as a bad IP (for example blacklisted), but a quality proxy can be considered as a good IP (private/paid proxies)</p>"},{"location":"9hits-app/exchange/manage-campaign/#allow-ipv6","title":"Allow IPv6","text":"<p>Allow visitors to use IPv6 to view your website. If your website is not compatible with IPv6, you should turn this option off</p>"},{"location":"9hits-app/exchange/manage-campaign/#allow-blocked-popups","title":"Allow Blocked Popups","text":"<p>The 9Hits Exchange Mode has an option for member to turn off the popup, so this option also allows you to accept views from these members or not.</p>"},{"location":"9hits-app/exchange/manage-campaign/#ip-filter","title":"IP Filter","text":"<p>You can block traffic from one or more IP addresses by setting up filtering rules.</p> <p>1. Filter types:</p> <pre><code>1.1: By Session IP  Block traffic from sessions by its IP\n1.2: By Machine IP  Block traffic from sessions according to the real IP of the computer running those sessions\n1.3: All:           Block traffic from sessions if one of the two rules above is matched\n</code></pre> <p>2. Filter rules:</p> <p>The Filter rules can be one or more specified IP addresses (separated by commas), or use * as a wildcard. Leave empty to turn off the filter. Be careful! If you set an invalid filter, it may not work properly, some examples: <pre><code>2.1: 1.12.123.45                Block ip 1.12.123.45\n2.2: 1.12.123.45,69.126.45.15   Block ip 1.12.123.45 and 69.126.45.15\n2.3: 69.126.*,1.12.123.45       Block ip range [69.126.0.0 - 69.126.255.255] and ip 1.12.123.45\n\nIPv6 uses the same logic\n</code></pre> 3. Some use cases:</p> <p>Take a look at the figure below, we have 4 sessions running on a computer with IP address 1.12.123.45. </p> <pre><code>Case 1: Apply 1.1 and 2.1  ss1 is blocked\nCase 2: Apply 1.1 and 2.2  ss1 and ss2 are blocked\nCase 3: Apply 1.1 and 2.3  ss1, ss2 and ss4 are blocked\nCase 4: Apply 1.2 and 2.1  all sessions are blocked\nCase 5: Apply 1.3 and 2.1  all sessions are blocked\n\nNote: Any other sessions from other machines that matched your filter will also blocked.\n</code></pre>"},{"location":"9hits-app/exchange/manage-campaign/#hourly-limit","title":"Hourly Limit","text":"<p>Set the hourly views limit, There are three modes related to speed of sending visits: Normal, Fast, and Slow. Consider yourself and choose the appropriate mode. The number of views can be set for each individual hour. Note that the time is based on the 9Hits server time!</p> <p>Tip</p> <p>You may set 0 to get unlimited views or -1 to disable views for certain hours!</p>"},{"location":"9hits-app/exchange/manage-campaign/#disable-jsimagecookie-rate","title":"Disable Js/Image/Cookie Rate","text":"<p>This is the rate of disabling some browser features. That means if you set to zero mean completely activate and 100 is completely disabled. You can set a rate for any feature. For example, we set to 65, which means the feature is turned off at 65% and turns on at 35%. Note that turning off Image will affect Googly Analytic.</p>"},{"location":"9hits-app/exchange/manage-campaign/#ad-safe","title":"Ad Safe","text":"<p>Prevent the viewer from loading ads from a specific network, Eg: you dont want the viewer to load Google Ads on your site to avoid your Google Ads account may get banned.</p>"},{"location":"9hits-app/exchange/manage-campaign/#web-security","title":"Web Security","text":"<p>Enable/Disable Web Security (same-origin policy)</p>"},{"location":"9hits-app/exchange/manage-campaign/#enable-alexa-extension","title":"Enable Alexa extension","text":"<p>Obsolete</p>"},{"location":"9hits-app/exchange/manage-campaign/#state","title":"State","text":"<p>By default your campaign will be activated as soon as you create it, you can pause and run it later.</p>"},{"location":"9hits-app/exchange/user-agent/","title":"Customizing User Agent","text":""},{"location":"9hits-app/exchange/user-agent/#manage-your-user-agent","title":"Manage your user-agent","text":"<p>The custom user-agents are used for the Platform option in your campaign. Manage your custom-user agent here.</p> <p></p> <ul> <li>Title: Name the new User-Agent group</li> <li>User Agent List: List of your User-Agent, one line per item.</li> <li>Browser Sizes Setting: Add the browser sizes used for a list of user-agents that you set up above.</li> </ul>"},{"location":"9hits-app/exchange/user-agent/#how-its-works","title":"How its works","text":"<p>The system will randomly take an user-agent from your list, a random size that you have added and then use them for viewing your websites from the 9Hits Application.</p>"},{"location":"macros/functions/","title":"9Hits Macros Build-in Functions","text":"<p>Note</p> <p>Some functions are required await keyword</p>"},{"location":"macros/functions/#thecampaign-object","title":"TheCampaign object","text":"<p>You can get some informations of your campaign from TheCampaign object. This object is available on the Exchange Mode only.</p> <pre><code>const TheCampaign  = { \"id\": 123,\n\"url\": \"http://google.com\",\n\"duration\": 15\n}\n////For example, to get the campaign ID, you can use\nTheCampaign.id\n</code></pre>"},{"location":"macros/functions/#log","title":"Log","text":"<p>Print one or more message to the Macros Editor output.</p> Syntax <pre><code>Log(msg1[, msg2, msg3, ...);\n</code></pre> Parameters Name Description <code>msg1</code> Message to show on the Output tab on the Macros Editor <code>...</code> Message to show on the Output tab on the Macros Editor <code>msg_n</code> Message to show on the Output tab on the Macros Editor Example <pre><code>await WaitForLoading ();\nLog(\"hello\", new Date(), await EvalScript (\"location.href\"));\n</code></pre>"},{"location":"macros/functions/#delay","title":"Delay","text":"<p>Pause the script for a period of time in milliseconds.</p> Syntax <pre><code>await Delay (ms [, ms2]);\n</code></pre> Parameters Name Description <code>ms</code> Delay time in miliseconds. <code>ms2</code> Delay in the range from <code>ms</code> to <code>ms2</code> (optional). Example <pre><code>await Delay(3000);//delay for 3 seconds\nawait Delay(3000, 10000);//delay random between 3-10 seconds\n</code></pre>"},{"location":"macros/functions/#random","title":"Random","text":"<p>Returns a random integer that is within a specified range.</p> Syntax <pre><code>await Random (num1 [, num2]);\n</code></pre> Parameters Name Description <code>num1</code> Random a number from 0 to num1. <code>num2</code> Random a number between <code>num1</code> and <code>num2</code> (optional). Example <pre><code>const r1 = Random(3); //random a number from 0 to 3 (3 excluded)\nconst r2 = Random(5, 10);  //random a number between 5 and 10 (10 excluded)\n</code></pre>"},{"location":"macros/functions/#randomarray","title":"RandomArray","text":"<p>Take a random item from an array.</p> Syntax <pre><code>await RandomArray (array);\n</code></pre> Parameters Name Description <code>array</code> An array of any element Example <pre><code>const randomKeyword = RandomArray([\"traffic exchange\", \"auto surf\"]);\nLog (randomKeyword);\n</code></pre>"},{"location":"macros/functions/#clickbycoordinates","title":"ClickByCoordinates","text":"<p>Click on an area on your website based on coordinates.</p> Syntax <pre><code>await ClickByCoordinates (x1, y1, x2, y2, nClick=1);\n</code></pre> Parameters Name Description <code>x1</code> x coordinate of the top-left <code>y1</code> y coordinate of the top-left <code>x2</code> x coordinate of the right-bottom <code>y2</code> y coordinate of the right-bottom <code>nClick</code> Click count, default is 1 <p></p> Example <pre><code>await ClickByCoordinates(100, 100, 200, 200);\nawait ClickByCoordinates(100, 100, 200, 200, 2);\n</code></pre> Tip <p>You can also get the coordinates from the Editor like this</p> <p></p>"},{"location":"macros/functions/#clickbyselector","title":"ClickBySelector","text":"<p>Click on an element based on a css selector.</p> Syntax <pre><code>await ClickBySelector (selector, index=0, nClick = 1, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>index</code> Index of the element in case there are more than one elements matched the selector. You can use number (<code>0</code> for the first element) or <code>\"random\"</code> to randomly click an element, default is <code>0</code>. <code>nClick</code> Click count, default is 1 <code>frameSearch</code> If the target element is in an iframe, you have to tell the macros what frame is, empty mean top main frame. <code>frameSearchType</code> Frame search conditions, possible value: <code>\"src-starts\"</code>, <code>\"src-ends\"</code>, <code>\"src-equals\"</code>, <code>\"src-contains\"</code>, <code>\"src-regex\"</code>, <code>\"frame-path\"</code>, default is <code>\"src-contains\"</code>. Example <pre><code>//click to a link that contains 9hits.com\nawait ClickBySelector(\"a[href*='9hits.com']\");\n//click to a button with id #submit, inside an iframe which has src starts with http://9hits.com\nawait ClickBySelector(\"button#submit\", 0, 1, \"https://9hits.com\", \"src-starts\");\n//click to a button with id #submit, inside an iframe which has src equals to http://9hits.com/contact.html\nawait ClickBySelector(\"button#submit\", 0, 1, \"https://9hits.com/contact.html\", \"src-equals\");\n//click to a button with id #submit, inside an iframe which has src ends with /contact.html\nawait ClickBySelector(\"button#submit\", 0, 1, \"/contact.html\", \"src-ends\");\n//click to a button with id #submit, inside an iframe which has src contains 9hits.com\nawait ClickBySelector(\"button#submit\", 0, 1, \"9hits.com\", \"src-contains\");\n//click to a button with id #submit, inside an iframe which has src matched regex \\d+hits\\.com\nawait ClickBySelector(\"button#submit\", 0, 1, \"\\d+hits\\.com\", \"src-regex\");\n//click to a button with id #submit, inside the first frame\nawait ClickBySelector(\"button#submit\", 0, 1, \"0\", \"frame-path\");\n//click to a button with id #submit, inside the 2nd frame of the first frame\nawait ClickBySelector(\"button#submit\", 0, 1, \"0&gt;1\", \"frame-path\");\n</code></pre> Tip <p>Are you confused? Don't worry! You can also generate this click command easily by using the Editor like this.</p> <p></p>"},{"location":"macros/functions/#clickbyid","title":"ClickById","text":"<p>Click on an element based on its ID.</p> Syntax <pre><code>await ClickById (id, nClick=1, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>id</code> ID of the element. <code>nClick</code> Click count, default is 1 <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickById(\"load-more-button\");\n</code></pre>"},{"location":"macros/functions/#clickbyxpath","title":"ClickByXpath","text":"<p>Click on an element based on its xpath.</p> Syntax <pre><code>await ClickByXpath (xpath, nClick=1, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>xpath</code> xpath of the element. You may use the GenerateXpath function to generate xpath. <code>nClick</code> Click count, default is 1 <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickByXpath(\"/html/body/div/div[1]/div/ul/li[6]/a/div[1]/span\");\nawait ClickByXpath(GenerateXpath(\"a\", \"href\", \"https://9hits.com%\"));\n</code></pre>"},{"location":"macros/functions/#clickbytag","title":"ClickByTag","text":"<p>Click on an element based on its tag name.</p> Syntax <pre><code>await ClickByTag (tag, index, nClick=1, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>tag</code> Tag name of the element. <code>index</code> Index of the element in case there are more than one elements has the same tag name. You can use number (<code>0</code> for the first element) or <code>\"random\"</code> to randomly click an element, default is <code>0</code>. <code>nClick</code> Click count, default is 1 <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickByXpath(\"/html/body/div/div[1]/div/ul/li[6]/a/div[1]/span\");\nawait ClickByXpath(GenerateXpath(\"a\", \"href\", \"https://9hits.com%\"));\n</code></pre>"},{"location":"macros/functions/#clickbyclass","title":"ClickByClass","text":"<p>Click on an element based on its class name.</p> Syntax <pre><code>await ClickByClass (class, index, nClick=1, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>class</code> Class name of the element. <code>index</code> Index of the element in case there are more than one elements has the same class name. You can use number (<code>0</code> for the first element) or <code>\"random\"</code> to randomly click an element, default is <code>0</code>. <code>nClick</code> Click count, default is 1 <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickByClass(\"skip-button\"); //Click to the first element has class name \"skip-button\"\nawait ClickByClass(\"skip-button\", 1); //Click to the 2nd element has class name \"skip-button\"\nawait ClickByClass(\"skip-button\", \"random\"); //Click to the random any element has class name \"skip-button\"\n</code></pre>"},{"location":"macros/functions/#clickrandomlink","title":"ClickRandomLink","text":"<p>Randomly click any link on your website.</p> Syntax <pre><code>await ClickRandomLink (frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickRandomLink();\n</code></pre>"},{"location":"macros/functions/#clickrandominternallink","title":"ClickRandomInternalLink","text":"<p>Randomly click any internal link on your website.</p> Syntax <pre><code>await ClickRandomInternalLink (frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickRandomInternalLink();\n</code></pre>"},{"location":"macros/functions/#clickrandomexternallink","title":"ClickRandomExternalLink","text":"<p>Randomly click any external link on your website.</p> Syntax <pre><code>await ClickRandomExternalLink (frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await ClickRandomExternalLink();\n</code></pre>"},{"location":"macros/functions/#setbyid","title":"SetById","text":"<p>Set the value for an attribute of an element based on its ID.</p> Syntax <pre><code>await SetById (id, attr, value, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>id</code> ID of the element. <code>attr</code> The attribute you want to set. <code>value</code> The value you want to set. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await SetById(\"email\", \"value\", \"support@9hits.com\");\n</code></pre>"},{"location":"macros/functions/#setbyxpath","title":"SetByXpath","text":"<p>Set the value for an attribute of an element based on its xpath.</p> Syntax <pre><code>await SetByXpath (xpath, attr, value, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>xpath</code> Xpath of the element. <code>attr</code> The attribute you want to set. <code>value</code> The value you want to set. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await SetByXpath ('//input[@type=\"email\"]', 'value', 'support@9hits.com');\n</code></pre>"},{"location":"macros/functions/#setbyclass","title":"SetByClass","text":"<p>Set the value for an attribute of an element based on its class name.</p> Syntax <pre><code>await SetByClass (class, attr, value, index, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>class</code> Class name of the element. <code>attr</code> The attribute you want to set. <code>value</code> The value you want to set. <code>index</code> Index of the element in case there are multiple elements with the same class name. 0 is the first element, you can also use <code>\"random\"</code> or <code>\"all\"</code>. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await SetByClass(\"text-box\", \"value\", \"text value\");\nawait SetByClass(\"text-box\", \"value\", \"text value\", 2);\nawait SetByClass(\"text-box\", \"value\", \"text value\", \"random\");\nawait SetByClass(\"text-box\", \"value\", \"text value\", \"all\");\n</code></pre>"},{"location":"macros/functions/#setbytag","title":"SetByTag","text":"<p>Set the value for an attribute of an element based on its tag name.</p> Syntax <pre><code>await SetByTag (tag, attr, value, index, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>tag</code> Tag name of the element. <code>attr</code> The attribute you want to set. <code>value</code> The value you want to set. <code>index</code> Index of the element in case there are multiple elements with the same tag name. 0 is the first element, you can also use <code>\"random\"</code> or <code>\"all\"</code>. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await SetByTag(\"input\", \"value\", \"text value\");\nawait SetByTag(\"input\", \"value\", \"text value\", 2);\nawait SetByTag(\"input\", \"value\", \"text value\", \"random\");\nawait SetByTag(\"input\", \"value\", \"text value\", \"all\");\n</code></pre>"},{"location":"macros/functions/#capturepage","title":"CapturePage","text":"<p>Take an screenshot of the web page in JPEG format, return it as base64 encoded.</p> Syntax <pre><code>await CapturePage (quality);\n</code></pre> Parameters Name Description <code>quality</code> The quality of the image (from 0 to 100), default is 80. Example <pre><code>const imgBase64 = await CapturePage();\nconst betterImgBase64 = await CapturePage(100);\n</code></pre>"},{"location":"macros/functions/#capturearea","title":"CaptureArea","text":"<p>Capture a specified area of the web page with JPEG format, return as base64 encoded.</p> Syntax <pre><code>await CaptureArea (x1, y1, x2, y2, quality);\n</code></pre> Parameters Name Description <code>x1</code> x coordinate of the top-left <code>y1</code> y coordinate of the top-left <code>x2</code> x coordinate of the right-bottom <code>y2</code> y coordinate of the right-bottom <code>quality</code> The quality of the image (from 0 to 100), default is 80. Example <pre><code>const imgBase64 = await CaptureArea(0, 0, 300, 500);\nconst betterImgBase64 = await CaptureArea(0, 0, 300, 500, 100);\n</code></pre>"},{"location":"macros/functions/#captureelement","title":"CaptureElement","text":"<p>Capture an element by a selector of the web page with JPEG format, return as base64 encoded. Useful when you need to take a picture to bypass captcha, but you can also capture any element not just img tag.</p> Syntax <pre><code>await CaptureElement (selector, quality, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> The CSS selector <code>quality</code> The quality of the image (from 0 to 100), default is 80. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>const captcha = await CaptureElement(\"#image_captcha\");\nconst avatar = await CaptureElement(\"#profile img.avatar\");\n</code></pre> Tip <p>You can also generate the CaptureElement command easily by using the Editor.</p> <p></p>"},{"location":"macros/functions/#evalscript","title":"EvalScript","text":"<p>Execute javascript code on the website and return value.</p> Syntax <pre><code>await EvalScript (jsCode, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>jsCode</code> The javascript code to execute. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForLoading();\nconst loc = await EvalScript ('window.location');\nloc.href=\"https://9hits.com\";\nLog(loc);\n</code></pre>"},{"location":"macros/functions/#generatexpath","title":"GenerateXpath","text":"<p>Create xpath to target the element. You can combine this function with ClickByXpath, SetByXpath or any function that use xpath.</p> Syntax <pre><code>GenerateXpath (tag, attr, value, index);\n</code></pre> Parameters Name Description <code>tag</code> Tag name of the element. <code>attr</code> The attribute of the element. <code>value</code> The value of the <code>attr</code>. <code>index</code> The index of the element. Example <pre><code>//a link has href = \"http://google.com\"\nGenerateXpath(\"a\", \"href\", \"http://google.com\");\n//a link has href starts with \"http://google\"\nGenerateXpath(\"a\", \"href\", \"http://google%\");\n//a link has href ends with \"google.com\"\nGenerateXpath(\"a\", \"href\", \"%google.com\");\n//a link has href contains \"google\"\nGenerateXpath(\"a\", \"href\", \"%google%\");\n</code></pre>"},{"location":"macros/functions/#getattribute","title":"GetAttribute","text":"<p>Get the value of an attribute of an element based on its xpath.</p> Syntax <pre><code>await GetAttribute (xpath, attr, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>xpath</code> Xpath of the element. <code>attr</code> The attribute of the element. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>const result = await GetAttribute ('//input[@type=\"email\"]', 'value');\nLog (result);\n</code></pre>"},{"location":"macros/functions/#getelementpos","title":"GetElementPos","text":"<p>Get the coordinates of an element.</p> Syntax <pre><code>await GetElementPos (jsCode, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>jsCode</code> The javascript code to locate the element. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>const pos = await GetElementPos (\"document.getElementById('submit-button');\");\n//Return: object {X1: 100, Y1: 100, X2:200, Y2: 200}\nif(pos) {\nClickByCoordinates(pos.X1, pos.Y1, pos.X2, pos.Y2);\n}\n</code></pre>"},{"location":"macros/functions/#getbrowsersize","title":"GetBrowserSize","text":"<p>Return the browser size.</p> Syntax <pre><code>await GetBrowserSize ();\n</code></pre> Example <pre><code>const size = await GetBrowserSize();\n//Return: object {width: 1000, height: 800}\n</code></pre>"},{"location":"macros/functions/#getsource","title":"GetSource","text":"<p>Return the source code of the website.</p> Syntax <pre><code>await GetSource ();\n</code></pre> Example <pre><code>const source = await GetSource();\n</code></pre>"},{"location":"macros/functions/#gethtml","title":"GetHtml","text":"<p>Return the renderrerd html code of the website.</p> Syntax <pre><code>await GetHtml ();\n</code></pre> Example <pre><code>const source = await GetHtml();\n</code></pre>"},{"location":"macros/functions/#geturl","title":"GetUrl","text":"<p>Return the current URL.</p> Syntax <pre><code>await GetUrl ();\n</code></pre> Example <pre><code>const url = await GetUrl();\n</code></pre>"},{"location":"macros/functions/#getuseragent","title":"GetUserAgent","text":"<p>Return the current User-Agent.</p> Syntax <pre><code>GetUserAgent ();\n</code></pre> Example <pre><code>const ua = GetUserAgent();\n</code></pre>"},{"location":"macros/functions/#isloading","title":"IsLoading","text":"<p>Indicates that the browser is loading or not.</p> Syntax <pre><code>await IsLoading ();\n</code></pre> Example <pre><code>while(await IsLoading ()) {\nawait Delay(1000);\n}\n</code></pre>"},{"location":"macros/functions/#ismobile","title":"IsMobile","text":"<p>Indicates that the browser is mobile or not (base on the User-Agent).</p> Syntax <pre><code>IsMobile ();\n</code></pre> Example <pre><code>const isMobile = IsMobile ();\n</code></pre>"},{"location":"macros/functions/#ishidebrowser","title":"IsHideBrowser","text":"<p>Indicates the browser visibility.</p> Syntax <pre><code>await IsHideBrowser ();\n</code></pre> Example <pre><code>const isHide = IsHideBrowser ();\n</code></pre>"},{"location":"macros/functions/#waitforloading","title":"WaitForLoading","text":"<p>Wait until the browser has finished loading (main and all sub frame), return <code>true</code> if browser is fully loaded, <code>false</code> if timedout (if timeout is passed).</p> Syntax <pre><code>await WaitForLoading (timeout=0);\n</code></pre> Parameters Name Description <code>timeout</code> In seconds, 0 mean unlimited. Example <pre><code>await WaitForLoading();\nLog(\"loaded\");\n</code></pre>"},{"location":"macros/functions/#navigate","title":"Navigate","text":"<p>Navigate to an url.</p> Syntax <pre><code>await Navigate (url[, referrer]);\n</code></pre> Parameters Name Description <code>url</code> The target URL. <code>referrer</code> Spoof a referrer url. Example <pre><code>await Navigate(\"https://google.com/\");\nawait WaitForLoading();\nawait Navigate(\"https://9hits.com/\", \"https://google.com/\");\n</code></pre>"},{"location":"macros/functions/#getduration","title":"GetDuration","text":"<p>Exchange Mode only</p> <p>Returns the maximum duration in seconds that the app will view your website.</p> Syntax <pre><code>await GetDuration ();\n</code></pre>"},{"location":"macros/functions/#getviewedduration","title":"GetViewedDuration","text":"<p>Exchange Mode only</p> <p>Returns the total time in seconds that the app viewed your website.</p> Syntax <pre><code>await GetViewedDuration ();\n</code></pre>"},{"location":"macros/functions/#getmaxpopups","title":"GetMaxPopups","text":"<p>Exchange Mode only</p> <p>Returns the maximum number of popups your site may be allowed to open, if the owner disabled popups, the return value will be 0.</p> Syntax <pre><code>await GetMaxPopups ();\n</code></pre>"},{"location":"macros/functions/#getconnectiontype","title":"GetConnectionType","text":"<p>Exchange Mode only</p> <p>Returns the connection type of the app. Possible values are: <code>system</code>, <code>http</code>, <code>socks4</code>, <code>socks5</code>, <code>ssh</code>.</p> Syntax <pre><code>await GetConnectionType ();\n</code></pre>"},{"location":"macros/functions/#getimagebyxpath","title":"GetImageByXpath","text":"<p>Get an image in base64 format based on its xpath.</p> Syntax <pre><code>await GetImageByXpath (xpath, frameSearch=\"\", frameSearchType=\"\");\n</code></pre> Parameters Name Description <code>xpath</code> xpath of the element. <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>const imgB64 = await GetImageByXpath (GenerateXpath(\"img\", \"name\", \"captcha\"));\n</code></pre>"},{"location":"macros/functions/#solverecaptcha","title":"SolveRecaptcha","text":"<p>This is a high-level function for solving ReCaptcha, built on top of functions _2CaptchaSolve and ACSolve. If the captcha is successfully solved, the result will automatically be assigned, then you can click the buttons such as <code>Submit</code>, <code>Continue</code>, etc using click functions. If these buttons do not exist, you can call the function TryToCallRecaptchaCallBack instead. The return result will be <code>false</code> in case of failed resolve, otherwise the data from the service API server.</p> Syntax <pre><code>await SolveRecaptcha (service, apiKey, timeout = 300, overrideApiServer = null);\n</code></pre> Parameters Name Description <code>service</code> Can be: <code>2captcha</code> or <code>anti-captcha</code> <code>apiKey</code> Your API key with the corresponding service <code>timeout</code> Maximum time to solve the captcha, in seconds (optional) <code>overrideApiServer</code> Overwrite the URL server of the captcha service (optional) <p>Watch a demo </p> Example <pre><code>//test on https://www.google.com/recaptcha/api2/demo\nawait WaitForLoading ();\nconst result = await SolveRecaptcha(\"2captcha\", \"YOUR_API_KEY\");\n//const result = await SolveRecaptcha(\"anti-captcha\", \"YOUR_API_KEY\");\nawait ClickBySelector('#recaptcha-demo-submit'); //click submit button\n//await TryToCallRecaptchaCallBack(result.request);\n/*\nExample of result value:\n2captcha: {\"status\":1,\"request\":\"THE_RESPONSE_RESULT\",\"captchaId\":\"71006265012\"}\nanti-captcha: \n{\n    \"errorId\":0,\n    \"status\":\"ready\",\n    \"solution\":{\n        \"gRecaptchaResponse\":\"THE_RESPONSE_RESULT\",\n        \"cookies\":{\n            \"_GRECAPTCHA\":\"COOKIES...\"\n        }\n    },\n    \"cost\":\"0.00200\",\n    \"ip\":\"1.2.3.4\",\n    \"createTime\":1658115990,\n    \"endTime\":1658116074,\n    \"solveCount\":0,\n    \"taskId\":685667638\n}\n*/\n</code></pre>"},{"location":"macros/functions/#solvehcaptcha","title":"SolvehCaptcha","text":"<p>This is a high-level function for solving hCaptcha, built on top of functions _2CaptchaSolve and ACSolve. If the captcha is successfully solved, the result will automatically be assigned, then you can click the buttons such as <code>Submit</code>, <code>Continue</code>, etc using click functions. The return result will be <code>false</code> in case of failed resolve, otherwise the data from the service API server.</p> Syntax <pre><code>await SolvehCaptcha (service, apiKey, timeout = 300, overrideApiServer = null);\n</code></pre> Parameters Name Description <code>service</code> Can be: <code>2captcha</code> or <code>anti-captcha</code> <code>apiKey</code> Your API key with the corresponding service <code>timeout</code> Maximum time to solve the captcha, in seconds (optional) <code>overrideApiServer</code> Overwrite the URL server of the captcha service (optional) Example <pre><code>//test on https://accounts.hcaptcha.com/demo\nawait WaitForLoading ();\nconst result = await SolvehCaptcha(\"2captcha\", \"YOUR_API_KEY\");\n//const result = await SolvehCaptcha(\"anti-captcha\", \"YOUR_API_KEY\");\nawait ClickById('hcaptcha-demo-submit'); //click submit button\n</code></pre>"},{"location":"macros/functions/#solveimagecaptcha","title":"SolveImageCaptcha","text":"<p>This is a high-level function for solving image captcha, built on top of functions _2CaptchaSolve and ACSolve. If the captcha is successfully solved, the result will automatically be assigned, then you can click the buttons such as <code>Submit</code>, <code>Continue</code>, etc using click functions.The return result will be <code>false</code> in case of failed resolve, otherwise the data from the service API server.</p> Syntax <pre><code>await SolveImageCaptcha (imgSelector, resultSelector, service, apiKey, timeout = 300, overrideApiServer = null);\n</code></pre> Parameters Name Description <code>imgSelector</code> The CSS selector of the image. <code>resultSelector</code> The CSS selector of the input textbox to fill the reuslt. <code>service</code> Can be: <code>2captcha</code> or <code>anti-captcha</code> <code>apiKey</code> Your API key with the corresponding service <code>timeout</code> Maximum time to solve the captcha, in seconds (optional) <code>overrideApiServer</code> Overwrite the URL server of the captcha service (optional) <p>Watch a demo </p> Example <pre><code>//test on https://captcha.com/demos/features/captcha-demo.aspx\nawait WaitForLoading ();\nconst result = await SolveImageCaptcha(\"#demoCaptcha_CaptchaImage\", \"#captchaCode\", \"2captcha\", \"YOUR_API_KEY\")\n// const result = await SolveImageCaptcha(\"#demoCaptcha_CaptchaImage\", \"#captchaCode\", \"anti-captcha\", \"YOUR_API_KEY\")\nawait ClickBySelector (\"#validateCaptchaButton\");\n/*\nExample of result value:\n2captcha: {\"status\":1,\"request\":\"bw8t\",\"captchaId\":\"71014870176\"}\nanti-captcha: \n{\n    \"errorId\":0,\n    \"status\":\"ready\",\n    \"solution\":{\n        \"text\":\"BW8T\",\n        \"url\":\"http://209.212.146.170/80/165820017899645.jpg\"\n    },\n    \"cost\":\"0.00070\",\n    \"ip\":\"1.2.3.4\",\n    \"createTime\":1658200178,\n    \"endTime\":1658200181,\n    \"solveCount\":0,\n    \"taskId\":701277528\n}\n*/\n</code></pre>"},{"location":"macros/functions/#_2captchasolve","title":"_2CaptchaSolve","text":"<p>Solve captcha by 2Captcha service. If you want to use another provider that is similar with 2captcha, you can override the api endpoint by set a url to <code>_2CaptchaServer</code>.</p> Syntax <pre><code>await _2CaptchaSolve (params, timeout);\n</code></pre> Parameters Name Description <code>params</code> 2Captcha parameters. <code>timeout</code> Timeout in seconds. Example <pre><code>//_2CaptchaServer = \"http://a-similar-2captcha.com\";\nconst captBase64 = await GetImageByXpath('//*[@id=\"CAPTCHA\"]');\nconst result = await _2CaptchaSolve({\n'key' : '2CAPTCHA_API_KEY', //replace with your 2Captcha API Key\n'method' : 'base64',\n'json' : 1,\n'body': captBase64\n});\nLog(\"Result is:\", result.request);\n//Example Result: {status:1, request: VMXKDG, captchaId: 1241352612}\n</code></pre>"},{"location":"macros/functions/#_2captchareportbad","title":"_2CaptchaReportBad","text":"<p>If you believe that captcha is resolved incorrectly, you can use this function to report it. However do not abuse.</p> Syntax <pre><code>await _2CaptchaReportBad (key, captchaId);\n</code></pre> Parameters Name Description <code>key</code> Your 2Captcha API Key. <code>captchaId</code> ID of the captcha returned by the _2CaptchaSolve function. Example <pre><code>const captBase64 = await GetImageByXpath('//*[@id=\"CAPTCHA\"]');\nconst result = await _2CaptchaSolve({\n'key' : '2CAPTCHA_API_KEY', //replace with your 2Captcha API Key\n'method' : 'base64',\n'json' : 1,\n'body': captBase64\n});\n//do something...\nawait _2CaptchaReportBad('2CAPTCHA_API_KEY', result.captchaId);\n</code></pre>"},{"location":"macros/functions/#acsolve","title":"ACSolve","text":"<p>Solve captcha by anti-captcha service. If you want to use another provider that is similar with anti-captcha, you can override the api endpoint to AntiCaptchaServer.</p> Syntax <pre><code>await ACSolve (params, timeout);\n</code></pre> Parameters Name Description <code>params</code> anti-captcha parameters. <code>timeout</code> Timeout in seconds. Example <pre><code>//AntiCaptchaServer = \"http://a-similar-anti-captcha.com\";\nconst image = await GetImageByXpath('//*[@id=\"captcha_one\"]');\nconst result = await ACSolve({\n\"clientKey\":\"Your anti-captcha API Key\",\n\"task\":\n{\n\"type\":\"ImageToTextTask\",\n\"body\":image,\n\"phrase\":false,\n\"case\":false,\n\"numeric\":false,\n\"math\":0,\n\"minLength\":0,\n\"maxLength\":0\n}\n}, 150);\n/* Example result\n{\n    \"taskId\":1234567,\n    \"errorId\":0,\n    \"status\":\"ready\",\n    \"solution\":\n        {\n            \"text\":\"deditur\",\n            \"url\":\"http:\\/\\/61.39.233.233\\/1\\/147220556452507.jpg\"\n        },\n    \"cost\":\"0.000700\",\n    \"ip\":\"46.98.54.221\",\n    \"createTime\":1472205564,\n    \"endTime\":1472205570,\n    \"solveCount\":\"0\"\n}\n*/\n</code></pre>"},{"location":"macros/functions/#acreportincorrectimage","title":"ACReportIncorrectImage","text":"<p>If you believe that the image captcha is resolved incorrectly, you can use this function to report it. However do not abuse.</p> Syntax <pre><code>await ACReportIncorrectImage(key, taskId);\n</code></pre> Parameters Name Description <code>key</code> Your anti-captcha API Key. <code>taskId</code> The taskId returned by the ACSolve function. Example <pre><code>const image = await GetImageByXpath('//*[@id=\"captcha_one\"]');\nconst result = await ACSolve({\n\"clientKey\":\"Your anti-captcha API Key\",\n\"task\":\n{\n\"type\":\"ImageToTextTask\",\n\"body\":image,\n\"phrase\":false,\n\"case\":false,\n\"numeric\":false,\n\"math\":0,\n\"minLength\":0,\n\"maxLength\":0\n}\n}, 150);\n...\n//do something | submit captcha...\n...\nif(somehow you know that the captcha was incorrect)\n{\nACReportIncorrectImage(\"Your anti-captcha API Key\", result.taskId);\n}\n</code></pre>"},{"location":"macros/functions/#acreportincorrectrecaptcha","title":"ACReportIncorrectRecaptcha","text":"<p>If you believe that the reCaptcha is resolved incorrectly, you can use this function to report it. However do not abuse.</p> Syntax <pre><code>await ACReportIncorrectRecaptcha(key, taskId);\n</code></pre> Parameters Name Description <code>key</code> Your anti-captcha API Key. <code>taskId</code> The taskId returned by the ACSolve function. Example <pre><code>const result = await ACSolve({\n\"clientKey\": \"Your anti-captcha API Key\",\n\"task\":\n{\n\"type\":\"NoCaptchaTaskProxyless\",\n\"websiteURL\":\"https://9hits.com\",\n\"websiteKey\":\"6LdPp08UAAAAADi4dE6frVDXCv2CgESTpcscb_LS\"\n}\n}, 600);\n/// ...\n// do something | submit captcha...\n/// ...\nif(somehow you know that the reCaptcha was incorrect)\n{\nACReportIncorrectRecaptcha(\"Your anti-captcha API Key\", result.taskId);\n}\n</code></pre>"},{"location":"macros/functions/#trytocallrecaptchacallback","title":"TryToCallRecaptchaCallBack","text":"<p>Try to execute recaptcha callback.</p> Syntax <pre><code>TryToCallRecaptchaCallBack (result);\n</code></pre> Parameters Name Description <code>result</code> The recaptcha response. Example <pre><code>const result = await ACSolve({\n\"clientKey\": \"Your anti-captcha API Key\",\n\"task\":\n{\n\"type\":\"NoCaptchaTaskProxyless\",\n\"websiteURL\":\"https://9hits.com\",\n\"websiteKey\":\"6LdPp08UAAAAADi4dE6frVDXCv2CgESTpcscb_LS\"\n}\n}, 600);\nawait TryToCallRecaptchaCallBack(result.solution.gRecaptchaResponse);\n</code></pre>"},{"location":"macros/functions/#waitforelement","title":"WaitForElement","text":"<p>Wait for an element (a DOM object) until a certain condition is satisfied. Return <code>true</code> when <code>conditionCallback</code> function returns <code>true</code>, <code>false</code> when timed out.</p> Syntax <pre><code>await WaitForElement (selector, conditionCallback, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>conditionCallback</code> The callback function with an argument of the object selected by the <code>selector</code> must return <code>true</code> or <code>false</code>. <code>timeout</code> Maximum time to wait for the <code>conditionCallback</code> to returns <code>true</code>, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>//wait for an image (img tag) to has a none-empty src\nawait WaitForElement(\"img#captcha\", (elm) =&gt; {\nreturn elm &amp;&amp; elm.src != \"\"\n})\n</code></pre>"},{"location":"macros/functions/#waitforelmtoappear","title":"WaitForElmToAppear","text":"<p>Wait for an element to appear.</p> Syntax <pre><code>await WaitForElmToAppear (selector, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>timeout</code> Maximum time to wait, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForElmToAppear(\"#submit-btn\");\nawait WaitForElmToAppear(\"#submit-btn\", 25); //wait for 25s\n</code></pre>"},{"location":"macros/functions/#waitforelmtodisappear","title":"WaitForElmToDisappear","text":"<p>Wait for an element to disappear.</p> Syntax <pre><code>await WaitForElmToDisappear (selector, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>timeout</code> Maximum time to wait, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForElmToDisappear(\"#cancel-btn\");\nawait WaitForElmToDisappear(\"#cancel-btn\", 25); //wait for 25s\n</code></pre>"},{"location":"macros/functions/#waitforelmtohasattr","title":"WaitForElmToHasAttr","text":"<p>Wait for an element until it has a desired attribute.</p> Syntax <pre><code>await WaitForElmToHasAttr (selector, attr, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>attr</code> The desired attribute <code>timeout</code> Maximum time to wait, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForElmToHasAttr(\"#submit-btn\", \"class\");\n</code></pre>"},{"location":"macros/functions/#waitforelmtohasattrvalue","title":"WaitForElmToHasAttrValue","text":"<p>Wait for an element until it has a desired attribute with a desired value.</p> Syntax <pre><code>await WaitForElmToHasAttrValue (selector, attr, value, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>attr</code> The desired attribute <code>value</code> The desired value <code>timeout</code> Maximum time to wait, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForElmToHasAttrValue(\"#submit-btn\", \"class\", \"success-btn\");\n</code></pre>"},{"location":"macros/functions/#waitforelmtoloseattr","title":"WaitForElmToLoseAttr","text":"<p>Wait for an element until it lose a desired attribute.</p> Syntax <pre><code>await WaitForElmToLoseAttr (selector, attr, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>attr</code> The desired attribute <code>timeout</code> Maximum time to wait, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForElmToLoseAttr(\"#submit-btn\", \"disabled\");\n</code></pre>"},{"location":"macros/functions/#waitforelmtextuntil","title":"WaitForElmTextUntil","text":"<p>Wait for an element until its text (innerText) satisfies a certain condition.</p> Syntax <pre><code>await WaitForElmTextUntil (selector, condition, value, timeout, frameSearch, frameSearchType);\n</code></pre> Parameters Name Description <code>selector</code> a CSS selector <code>condition</code> Condition to check <code>value</code>, can be: <code>equals</code>, <code>contains</code>, <code>starts-with</code>, <code>ends-with</code> <code>value</code> The desired value <code>timeout</code> Maximum time to wait, in seconds, default is 300s <code>frameSearch</code> See ClickBySelector <code>frameSearchType</code> See ClickBySelector Example <pre><code>await WaitForElmTextUntil(\"#count-down\", \"contains\", \"Please wait\");\nawait WaitForElmTextUntil(\"#count-down\", \"equals\", \"0s\");\n</code></pre>"},{"location":"macros/functions/#tabcount","title":"TabCount","text":"<p>Returns the number of opening browser windows.</p> Syntax <pre><code>await TabCount();\n</code></pre> Example <pre><code>const tabs = await TabCount();\n</code></pre>"},{"location":"macros/functions/#typing","title":"Typing","text":"<p>Simulate keyboard typing.</p> Syntax <pre><code>await Typing (text[, speed1, speed2]);\n</code></pre> Parameters Name Description <code>text</code> Text to type. <code>speed1</code> - <code>speed2</code> Delay time range to adjust typing speed (in miliseconds). Example <pre><code>await Typing (\"Hello 9Hits\");\nawait Typing (\"Hello 9Hits\", 300, 500);\n</code></pre>"},{"location":"macros/functions/#resizeto","title":"ResizeTo","text":"<p>Change the browser size.</p> Syntax <pre><code>await ResizeTo (width, height);\n</code></pre> Parameters Name Description <code>width</code> New width. <code>height</code> New height. Example <pre><code>await ResizeTo (600, 500);\n</code></pre>"},{"location":"macros/functions/#scrollto","title":"ScrollTo","text":"<p>Scroll the browser to the specified coordinates.</p> Syntax <pre><code>await ScrollTo (x, y, smooth = false);\n</code></pre> Parameters Name Description <code>x</code> x coordinates. <code>y</code> y coordinates. <code>smooth</code> Smooth scrolling. Example <pre><code>await ScrollTo(0, 1000);\nawait ScrollTo(0, 0, true);\n</code></pre>"},{"location":"macros/functions/#tabfocus","title":"TabFocus","text":"<p>Focusing on the specified browser tab, macros will be executed on the focused tab after this function call.</p> Syntax <pre><code>await TabFocus (target);\n</code></pre> Parameters Name Description <code>target</code> Can be a tab index (1 is the first tab) or a search pattern by URL. Example <pre><code>await WaitForLoading();\nawait EvalScript('open(\"https://google.com\")');\nawait EvalScript('open(\"https://facebook.com\")');\nawait Delay(2000);\nawait EvalScript('document.write(\"this is main tab\")');\nawait TabFocus(2); //focus to the 2nd tab\nawait Delay(1000);\nawait EvalScript('document.write(\"this 2nd tab\")');\nawait TabFocus(\"facebook.com\"); //focus to the tab which has url contains \"facebook.com\"\nawait Delay(1000);\nawait EvalScript('document.write(\"this facebook tab\")');\n//focus to the first tab that does not contains facebook.com\nawait TabFocus(\"!facebook.com\");\n</code></pre>"},{"location":"macros/functions/#sendkeypress","title":"SendKeyPress","text":"<p>Simulate keypress event.</p> Syntax <pre><code>await SendKeyPress (keyCode, modifiers);\n</code></pre> Parameters Name Description <code>keyCode</code> Key Code <code>modifiers</code> Valid values: <code>WITH_ALT</code>, <code>WITH_CTRL</code>, <code>WITH_COMMAND</code>, <code>WITH_SHIFT</code> Example <pre><code>await SendKeyPress (K_KEYA); //press A\nawait SendKeyPress (K_KEYV, WITH_CTRL); //press Ctrl + V\nawait SendKeyPress (K_KEYV, WITH_CTRL | WITH_SHIFT); //press Ctrl + Shift + V\n</code></pre>"},{"location":"macros/functions/#sendkeydown","title":"SendKeyDown","text":"<p>Simulate keydown event.</p> Syntax <pre><code>await SendKeyDown (keyCode, modifiers);\n</code></pre> Parameters Name Description <code>keyCode</code> Key Code <code>modifiers</code> Valid values: <code>WITH_ALT</code>, <code>WITH_CTRL</code>, <code>WITH_COMMAND</code>, <code>WITH_SHIFT</code> Example <pre><code>await SendKeyDown (K_KEYA); //keydown A\n</code></pre>"},{"location":"macros/functions/#sendkeyup","title":"SendKeyUp","text":"<p>Simulate keyup event.</p> Syntax <pre><code>await SendKeyUp (keyCode, modifiers);\n</code></pre> Parameters Name Description <code>keyCode</code> Key Code <code>modifiers</code> Valid values: <code>WITH_ALT</code>, <code>WITH_CTRL</code>, <code>WITH_COMMAND</code>, <code>WITH_SHIFT</code> Example <pre><code>await SendKeyUp (K_KEYA); //keyup A\n</code></pre>"},{"location":"macros/functions/#sendkeychar","title":"SendKeyChar","text":"<p>Simulate keychar event.</p> Syntax <pre><code>await SendKeyChar (keyCode);\n</code></pre> Parameters Name Description <code>keyCode</code> Key Code or a character Example <pre><code>await SendKeyChar (K_KEYA);\nawait SendKeyChar (\"a\");\n</code></pre>"},{"location":"macros/functions/#sendmouseclick","title":"SendMouseClick","text":"<p>Simulate mouseclick event.</p> Syntax <pre><code>await SendMouseClick (x, y, button);\n</code></pre> Parameters Name Description <code>x</code> x coordinates. <code>y</code> y coordinates. <code>button</code> Can be <code>\"left\"</code>, <code>\"right\"</code> or <code>\"middle\"</code>. Example <pre><code>await SendMouseClick (100, 150, \"left\");\n</code></pre>"},{"location":"macros/functions/#sendmousemove","title":"SendMouseMove","text":"<p>Simulate mousemove event.</p> Syntax <pre><code>await SendMouseMove (x, y);\n</code></pre> Parameters Name Description <code>x</code> x coordinates. <code>y</code> y coordinates. Example <pre><code>await SendMouseMove (100, 150);\n</code></pre>"},{"location":"macros/functions/#sendmousewheel","title":"SendMouseWheel","text":"<p>Simulate mousewheel event.</p> Syntax <pre><code>await SendMouseWheel (deltaX, deltaY);\n</code></pre> Parameters Name Description <code>deltaX</code> Delta X. <code>deltaY</code> Delta Y. Example <pre><code>await SendMouseWheel(0, -120); //scroll down 120px\nawait Delay(3000);\nawait SendMouseWheel(0, 120); //scroll up 120px\n</code></pre>"},{"location":"macros/functions/#exit","title":"Exit","text":"<p>Close all browsers immediately.</p> Syntax <pre><code>Exit();\n</code></pre>"},{"location":"macros/functions/#httprequest","title":"HttpRequest","text":"<p>Make HTTP Request</p> Syntax <pre><code>await HttpRequest (url, params, referrer, headers);\n</code></pre> Parameters Name Description <code>url</code> URL to send request. <code>params</code> Post Parameters. <code>referrer</code> Referrer URL. <code>headers</code> Custom HTTP headers. Example <pre><code>const test1 = await HttpRequest(\"http://google.com\");\nconst test2 = await HttpRequest(\"http://google.com\", {\"post_data\" : \"xxx\", \"other_data\": \"yyy\"});\nconst test3 = await HttpRequest(\"http://google.com\", {\"post_data\" : \"xxx\", \"other_data\": \"yyy\"}, \"\", {\"custom-header\": \"custom-value\"});\n//send raw body\nconst test4 = await HttpRequest(\"url\", JSON.stringify({post_field: value}), \"\", {\"Content-Type\": \"application/json\"});\n</code></pre>"},{"location":"macros/functions/#readfile","title":"ReadFile","text":"<p>Bot and Profile Mode only</p> <p>Read and return the contents of a file as text.</p> Syntax <pre><code>await ReadFile (path);\n</code></pre> Parameters Name Description <code>path</code> Path to file. Example <pre><code>const test = await ReadFile(\"C:\\\\test.txt\");\nLog(test);\n</code></pre>"},{"location":"macros/functions/#writefile","title":"WriteFile","text":"<p>Bot and Profile Mode only</p> <p>Write text to a file.</p> Syntax <pre><code>await WriteFile (path, content, mode);\n</code></pre> Parameters Name Description <code>path</code> Path to file. <code>content</code> Text content. <code>mode</code> Can be <code>\"override\"</code> or <code>\"append\"</code>. Example <pre><code>await WriteFile(\"C:\\\\test.txt\", \"Hello\");\nawait WriteFile(\"C:\\\\test.txt\", \"World\", \"append\");\n</code></pre>"},{"location":"macros/functions/#getdownloadedfiles","title":"GetDownloadedFiles","text":"<p>Bot and Profile Mode only</p> <p>Returns an array of downloaded filenames.</p> Syntax <pre><code>await GetDownloadedFiles ();\n</code></pre> Example <pre><code>const files = await GetDownloadedFiles();\n</code></pre>"},{"location":"macros/functions/#isfiledownloaded","title":"IsFileDownloaded","text":"<p>Bot and Profile Mode only</p> <p>Check if the given file has been downloaded.</p> Syntax <pre><code>await IsFileDownloaded (fileName);\n</code></pre> Parameters Name Description <code>fileName</code> Name of the file to check. Example <pre><code>const downloaded = await IsFileDownloaded(\"update.zip\");\n</code></pre>"},{"location":"macros/functions/#setuploadfileorfolder","title":"SetUploadFileOrFolder","text":"<p>Bot and Profile Mode only</p> <p>Set the files will be selected when you click to a <code>Chose File</code> button on a web-page..</p> Syntax <pre><code>SetUploadFileOrFolder (paths);\n</code></pre> Parameters Name Description <code>paths</code> a path to file/folder or an array of paths. Example <pre><code>SetUploadFileOrFolder(\"C:\\\\test.txt\");\nSetUploadFileOrFolder(\"C:\\\\myfiles\");\nSetUploadFileOrFolder([\"C:\\\\test_1.txt\", \"C:\\\\test_2.txt\"]);\n</code></pre>"},{"location":"macros/functions/#getcurrentdir","title":"GetCurrentDir","text":"<p>Bot and Profile Mode only</p> <p>Returns the current path that 9Hits App is running.</p> Syntax <pre><code>await GetCurrentDir ();\n</code></pre> Example <pre><code>const dir = await GetCurrentDir ();\n</code></pre> <p>Tip</p> <p>Feel free to request a new function here.</p>"},{"location":"macros/functions/#keycode-table","title":"Keycode Table","text":"<p>Use for these functions: SendKeyPress, SendKeyDown, SendKeyUp, SendKeyChar.</p> Click here to see the list of key codes Name Description <code>K_BACKSPACE</code> Backspace <code>K_TAB</code> Tab <code>K_ENTER</code> Enter <code>K_SHIFT</code> Shift <code>K_CONTROL</code> Control <code>K_ALT</code> Alt <code>K_PAUSE</code> Pause <code>K_CAPSLOCK</code> CapsLock <code>K_ESCAPE</code> Escape <code>K_SPACE</code> Space <code>K_PAGEUP</code> PageUp <code>K_PAGEDOWN</code> PageDown <code>K_END</code> End <code>K_HOME</code> Home <code>K_ARROWLEFT</code> ArrowLeft <code>K_ARROWUP</code> ArrowUp <code>K_ARROWRIGHT</code> ArrowRight <code>K_ARROWDOWN</code> ArrowDown <code>K_PRINTSCREEN</code> PrintScreen <code>K_INSERT</code> Insert <code>K_DELETE</code> Delete <code>K_DIGIT0</code> Digit0 (0) <code>K_DIGIT1</code> Digit1 (1) <code>K_DIGIT2</code> Digit2 (2) <code>K_DIGIT3</code> Digit3 (3) <code>K_DIGIT4</code> Digit4 (4) <code>K_DIGIT5</code> Digit5 (5) <code>K_DIGIT6</code> Digit6 (6) <code>K_DIGIT7</code> Digit7 (7) <code>K_DIGIT8</code> Digit8 (8) <code>K_DIGIT9</code> Digit9 (9) <code>K_KEYA</code> KeyA (A) <code>K_KEYB</code> KeyB (B) <code>K_KEYC</code> KeyC (C) <code>K_KEYD</code> KeyD (D) <code>K_KEYE</code> KeyE (E) <code>K_KEYF</code> KeyF (F) <code>K_KEYG</code> KeyG (G) <code>K_KEYH</code> KeyH (H) <code>K_KEYI</code> KeyI (I) <code>K_KEYJ</code> KeyJ (J) <code>K_KEYK</code> KeyK (K) <code>K_KEYL</code> KeyL (L) <code>K_KEYM</code> KeyM (M) <code>K_KEYN</code> KeyN (N) <code>K_KEYO</code> KeyO (O) <code>K_KEYP</code> KeyP (P) <code>K_KEYQ</code> KeyQ (Q) <code>K_KEYR</code> KeyR (R) <code>K_KEYS</code> KeyS (S) <code>K_KEYT</code> KeyT (T) <code>K_KEYU</code> KeyU (U) <code>K_KEYV</code> KeyV (V) <code>K_KEYW</code> KeyW (W) <code>K_KEYX</code> KeyX (X) <code>K_KEYY</code> KeyY (Y) <code>K_KEYZ</code> KeyZ (Z) <code>K_METALEFT</code> MetaLeft (Meta) <code>K_METARIGHT</code> MetaRight (Meta) <code>K_CONTEXTMENU</code> ContextMenu <code>K_NUMPAD0</code> Numpad0 (0) <code>K_NUMPAD1</code> Numpad1 (1) <code>K_NUMPAD2</code> Numpad2 (2) <code>K_NUMPAD3</code> Numpad3 (3) <code>K_NUMPAD4</code> Numpad4 (4) <code>K_NUMPAD5</code> Numpad5 (5) <code>K_NUMPAD6</code> Numpad6 (6) <code>K_NUMPAD7</code> Numpad7 (7) <code>K_NUMPAD8</code> Numpad8 (8) <code>K_NUMPAD9</code> Numpad9 (9) <code>K_NUMPADMULTIPLY</code> NumpadMultiply (*) <code>K_NUMPADADD</code> NumpadAdd (+) <code>K_NUMPADSUBTRACT</code> NumpadSubtract (-) <code>K_NUMPADDECIMAL</code> NumpadDecimal (.) <code>K_NUMPADDIVIDE</code> NumpadDivide (/) <code>K_F1</code> F1 <code>K_F2</code> F2 <code>K_F3</code> F3 <code>K_F4</code> F4 <code>K_F5</code> F5 <code>K_F6</code> F6 <code>K_F7</code> F7 <code>K_F8</code> F8 <code>K_F9</code> F9 <code>K_F10</code> F10 <code>K_F11</code> F11 <code>K_F12</code> F12 <code>K_NUMLOCK</code> NumLock <code>K_SCROLLLOCK</code> ScrollLock <code>K_AUDIOVOLUMEMUTE</code> AudioVolumeMute <code>K_AUDIOVOLUMEDOWN</code> AudioVolumeDown <code>K_AUDIOVOLUMEUP</code> AudioVolumeUp <code>K_MEDIATRACKNEXT</code> MediaTrackNext <code>K_MEDIATRACKPREVIOUS</code> MediaTrackPrevious <code>K_MEDIASTOP</code> MediaStop <code>K_MEDIAPLAYPAUSE</code> MediaPlayPause <code>K_LAUNCHMAIL</code> LaunchMail <code>K_LAUNCHMEDIAPLAYER</code> LaunchMediaPlayer <code>K_LAUNCHAPPLICATION1</code> LaunchApplication1 <code>K_LAUNCHAPPLICATION2</code> LaunchApplication2 <code>K_SEMICOLON</code> Semicolon (;) <code>K_EQUAL</code> Equal (=) <code>K_COMMA</code> Comma (,) <code>K_MINUS</code> Minus (-) <code>K_PERIOD</code> Period (.) <code>K_SLASH</code> Slash (/) <code>K_BACKQUOTE</code> Backquote (`) <code>K_BRACKETLEFT</code> BracketLeft ([) <code>K_BACKSLASH</code> Backslash (\\) <code>K_BRACKETRIGHT</code> BracketRight (]) <code>K_QUOTE</code> Quote (')"},{"location":"macros/overview/","title":"9Hits Macros","text":""},{"location":"macros/overview/#what-is-the-9hits-macros","title":"What is the 9Hits Macros","text":"<p>9Hits Macros is just javascript language, with a set of built-in functions that help you create interactions on your website without the user's real interaction. Macros can be set for an exchange campaign, a bot campaign or a profile.</p> <p>You may want to see a basic tutorial.</p> <p></p>"},{"location":"macros/overview/#writing-your-script","title":"Writing your script","text":"<p>Before putting your script into the real mode, you can test to make sure it runs properly. To open the editor, just click the  button.</p> <p></p> <p>Here is an example script <pre><code>await WaitForLoading();\nawait Typing(\"9hits\\r\", 100, 200); //\\r mean press Enter key\nawait WaitForLoading();\nawait ClickBySelector(\"a[href*='9hits.com']\");\n</code></pre></p> <p>Tip</p> <p>Visit our github repo to try ready-made scripts. Use the Log function would help you in debugging your script.</p> <p></p>"}]}